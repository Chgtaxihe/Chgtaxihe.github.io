(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{731:function(t,a,r){"use strict";r.r(a);var e=r(30),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"个人排位赛6补题记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#个人排位赛6补题记录"}},[t._v("#")]),t._v(" 个人排位赛6补题记录")]),t._v(" "),r("h2",{attrs:{id:"boxes-ural-1114"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#boxes-ural-1114"}},[t._v("#")]),t._v(" Boxes (URAL 1114)")]),t._v(" "),r("p",[t._v("该题有组合数解法！占坑")]),t._v(" "),r("h2",{attrs:{id:"hypnotoad-s-secret-ural-1707"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hypnotoad-s-secret-ural-1707"}},[t._v("#")]),t._v(" Hypnotoad's Secret (URAL 1707)")]),t._v(" "),r("p",[t._v("C题我用的扫描线，3347ms，有树状数组的做法，可以优化到1s以内。占坑")]),t._v(" "),r("h2",{attrs:{id:"gcd-2010-ural-1846"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gcd-2010-ural-1846"}},[t._v("#")]),t._v(" GCD 2010 (URAL 1846)")]),t._v(" "),r("p",[t._v("我用了分块去做，406ms。可以用线段树+离散化做（线段树可以到125ms）。")]),t._v(" "),r("p",[t._v("我还看到另一份125ms的代码，具体如下：")]),t._v(" "),r("ul",[r("li",[t._v("添加数字时，用map维护每个数字出现次数，用set来维护所有数字。删除数字后暴力遍历set里的数，当gcd=1或gcd等于之前的值时退出遍历。简单粗暴，又快又好。")])]),t._v(" "),r("h2",{attrs:{id:"the-door-problem-codeforces-776d"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-door-problem-codeforces-776d"}},[t._v("#")]),t._v(" The Door Problem (Codeforces 776D)")]),t._v(" "),r("p",[t._v("此题有并查集解法！占坑")]),t._v(" "),r("p",[t._v("二分图染色也能做。")]),t._v(" "),r("p",[t._v("另外，2-SAT中判环的方法也有很多种，Tarjan似乎比较慢？")]),t._v(" "),r("h2",{attrs:{id:"jzptree-hdu-2625"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jzptree-hdu-2625"}},[t._v("#")]),t._v(" JZPTREE (HDU 2625)")]),t._v(" "),r("p",[t._v("不会，占坑")])])}),[],!1,null,null,null);a.default=s.exports}}]);